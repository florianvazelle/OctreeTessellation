name: build

on: [push, pull_request]

jobs:

  linux:
    timeout-minutes: 10

    strategy:
      matrix:
        compiler: [g++-10, clang++-11]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libgl-dev libglu1-mesa-dev -y
    
    - name: Install g++-10
      if: ${{ matrix.compiler == 'g++-10' }}
      run: sudo apt-get install g++-10 -y

    - name: Install clang-11
      if: ${{ matrix.compiler == 'clang++-11' }}
      run: sudo apt-get install clang-11 -y
    
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - name: Install Conan
      run: pip install --upgrade pip setuptools wheel conan

    - name: Create Build Environment
      run: cmake -E make_directory ${{ runner.workspace }}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        CXX: ${{ matrix.compiler }}
      run: cmake $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: cmake --build . --config Debug

  windows:
    timeout-minutes: 10

    strategy:
      matrix:
        toolset: [clang-cl, default, v141]
        include:
          - toolset: clang-cl
            toolset_option: -T"ClangCl"
          - toolset: v141
            toolset_option: -T"v141"

    runs-on:  windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Conan
      run: |
        python -c "import sys; print(sys.version)"
        python -m pip install --upgrade pip
        pip install conan

    - name: Create Build Environment
      run: cmake -E make_directory ${{ runner.workspace }}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        CXX: ${{ matrix.compiler }}
      run: cmake $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: cmake --build . --config Debug